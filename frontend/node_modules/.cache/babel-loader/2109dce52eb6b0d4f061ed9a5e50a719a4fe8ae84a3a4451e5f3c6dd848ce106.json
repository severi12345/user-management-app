{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\23755\\\\Documents\\\\K-ytt-j-n-muokkaus\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\n// src/components/Register.js\nimport React, { useState } from 'react';\n\n// Register-komponentti käsittelee käyttäjän rekisteröinnin\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  // useState hook luo tilan käyttäjän tiedoille: käyttäjänimi, salasana ja bio\n  const [user, setUser] = useState({\n    username: '',\n    password: '',\n    bio: ''\n  });\n  const [error, setError] = useState(null);\n  const [succsess, setSuccess] = useState(false);\n\n  // handleChange-funktio päivittää tilan, kun käyttäjä muuttaa lomakkeen kenttää\n  const handleChange = e => {\n    // Päivitetään vastaava kenttä tilassa\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n  // handleSubmit-funktio käsittelee lomakkeen lähetyksen\n  const handleSubmit = async e => {\n    setError(null);\n    setSuccess(false); // Nollataan onnistumisviesti ennen uutta yritystä\n\n    try {\n      const response = await fetch('http://localhost:5000/api/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Käyttäjä rekisteröitynyt:', data);\n        setSuccess(true); // Asetetaan onnistumisviesti\n        // Tyhjennä lomake kentät rekisteröinnin jälkeen\n        setUser({\n          username: '',\n          password: '',\n          bio: ''\n        });\n      } else {\n        throw new Error('Rekisteröinti epäonnistui');\n      }\n    } catch (err) {\n      console.error('Virhe rekisteröinnissä:', err);\n      setError('Rekisteröinti epäonnistui. Yritä uudelleen.');\n    }\n    e.preventDefault();\n    // Tulostetaan rekisteröityneen käyttäjän tiedot konsoliin\n    console.log('Käyttäjä rekisteröitynyt:', user);\n    // Näytetään ilmoitus onnistuneesta rekisteröinnistä\n    alert('Käyttäjä rekisteröityi onnistuneesti');\n  };\n  // Lomakkeen renderöinti\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Rekister\\xF6inti\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"K\\xE4ytt\\xE4j\\xE4nimi:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: user.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Salasana:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: user.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Bio:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"bio\",\n          value: user.bio,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Rekister\\xF6idy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"nlCe5Z+Dexg4OUP/GtXpYdg8A/A=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","user","setUser","username","password","bio","error","setError","succsess","setSuccess","handleChange","e","target","name","value","handleSubmit","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","Error","err","preventDefault","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/23755/Documents/K-ytt-j-n-muokkaus/frontend/src/components/Register.js"],"sourcesContent":["// src/components/Register.js\r\nimport React, { useState } from 'react';\r\n\r\n// Register-komponentti käsittelee käyttäjän rekisteröinnin\r\nfunction Register() {\r\n    // useState hook luo tilan käyttäjän tiedoille: käyttäjänimi, salasana ja bio\r\n    const [user, setUser] = useState({ username: '', password: '', bio: '' });\r\n\r\n    const [error, setError] = useState(null);\r\n    const [succsess, setSuccess] = useState(false);\r\n\r\n    // handleChange-funktio päivittää tilan, kun käyttäjä muuttaa lomakkeen kenttää\r\n    const handleChange = (e) => {\r\n        // Päivitetään vastaava kenttä tilassa\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    // handleSubmit-funktio käsittelee lomakkeen lähetyksen\r\n    const handleSubmit = async (e) => {\r\n        \r\n        setError(null);\r\n        setSuccess(false);  // Nollataan onnistumisviesti ennen uutta yritystä\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/users', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(user)\r\n            });\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log('Käyttäjä rekisteröitynyt:', data);\r\n                setSuccess(true);  // Asetetaan onnistumisviesti\r\n                // Tyhjennä lomake kentät rekisteröinnin jälkeen\r\n                setUser({ username: '', password: '', bio: '' });\r\n            } else {\r\n                throw new Error('Rekisteröinti epäonnistui');\r\n            }\r\n        } catch (err) {\r\n            console.error('Virhe rekisteröinnissä:', err);\r\n            setError('Rekisteröinti epäonnistui. Yritä uudelleen.');\r\n        }\r\n\r\n        e.preventDefault();\r\n        // Tulostetaan rekisteröityneen käyttäjän tiedot konsoliin\r\n        console.log('Käyttäjä rekisteröitynyt:', user);\r\n        // Näytetään ilmoitus onnistuneesta rekisteröinnistä\r\n        alert('Käyttäjä rekisteröityi onnistuneesti');\r\n    };\r\n    // Lomakkeen renderöinti\r\n    return (\r\n        <div>\r\n            <h2>Rekisteröinti</h2>\r\n             {/* Lomakkeen lähetys kutsuu handleSubmit-funktiota */}\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                Käyttäjänimi:\r\n                    {/* Tekstikenttä, joka päivittää username-tilan */}\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={user.username}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Salasana:\r\n                    {/* Salasanojen syöttökenttä, joka päivittää password-tilan */}\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={user.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Bio:\r\n                    {/* Tekstialue, joka päivittää bio-tilan */}\r\n                    <textarea\r\n                        name=\"bio\"\r\n                        value={user.bio}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                {/* Rekisteröinti-painike */}\r\n                <button type=\"submit\">Rekisteröidy</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}