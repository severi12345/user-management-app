{"ast":null,"code":"// src/components/Login.js\nimport React,{useState}from'react';import{useNavigate,usenavigate}from'react-router-dom';// Login-komponentti käsittelee käyttäjän kirjautumisen\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){// useState hook luo tilan kirjautumistiedoille: käyttäjänimi ja salasana\nconst[credentials,setCredentials]=useState({username:'',password:''});const[error,setError]=useState(null);const navigate=useNavigate();// handleChange-funktio päivittää tilan, kun käyttäjä muuttaa lomakkeen kenttää\nconst handleChange=e=>{// Päivitetään vastaava kenttä tilassa\nsetCredentials({...credentials,[e.target.name]:e.target.value});};// handleSubmit-funktio käsittelee lomakkeen lähetyksen\nconst handleSubmit=async e=>{e.preventDefault();try{// Lähetä POST-pyyntö backendille kirjautumistietojen kanssa\nconst response=await fetch('http://localhost:5000/api/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(credentials)});if(response.ok){//Jos Kirjautuminen onnistuu, ohjataan käyttäjä uuteen sivuun\nnavigate('/palvelut');// Ohjaa käyttäjän \"/palvelut\" sivulle\n}else{throw new Error('Virheellinen käyttäjänimi tai salasana');}}catch(err){//Näytetään virheilmoitus, josk irjautuminen epäonnistuu\nsetError(err.message);}};// Lomakkeen renderöinti\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Kirjaudu sis\\xE4\\xE4n\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"K\\xE4ytt\\xE4j\\xE4nimi:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",value:credentials.username,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Salasana:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:credentials.password,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Kirjaudu\"})]})]});}export default Login;","map":{"version":3,"names":["React","useState","useNavigate","usenavigate","jsx","_jsx","jsxs","_jsxs","Login","credentials","setCredentials","username","password","error","setError","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","err","message","children","style","color","onSubmit","type","onChange","required"],"sources":["C:/Users/23755/Documents/user-management-app/frontend/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate, usenavigate } from 'react-router-dom'\r\n\r\n// Login-komponentti käsittelee käyttäjän kirjautumisen\r\nfunction Login() {\r\n    // useState hook luo tilan kirjautumistiedoille: käyttäjänimi ja salasana\r\n    const [credentials, setCredentials] = useState({ username: '', password: ''});\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    // handleChange-funktio päivittää tilan, kun käyttäjä muuttaa lomakkeen kenttää\r\n    const handleChange = (e) => {\r\n        // Päivitetään vastaava kenttä tilassa\r\n        setCredentials({\r\n            ...credentials,    \r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    // handleSubmit-funktio käsittelee lomakkeen lähetyksen\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            // Lähetä POST-pyyntö backendille kirjautumistietojen kanssa\r\n            const response = await fetch('http://localhost:5000/api/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(credentials)\r\n            });\r\n\r\n            if (response.ok) {\r\n                //Jos Kirjautuminen onnistuu, ohjataan käyttäjä uuteen sivuun\r\n                navigate('/palvelut'); // Ohjaa käyttäjän \"/palvelut\" sivulle\r\n            } else {\r\n                throw new Error('Virheellinen käyttäjänimi tai salasana');\r\n            }\r\n        } catch (err) {\r\n            //Näytetään virheilmoitus, josk irjautuminen epäonnistuu\r\n            setError(err.message);\r\n        }\r\n    };\r\n    // Lomakkeen renderöinti\r\n    return (\r\n        <div>\r\n            <h2>Kirjaudu sisään</h2>\r\n            {/* Näytetään virirheilmoitus, jos kirjautuminen epäonnistuu*/}\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                Käyttäjänimi:\r\n                    {/* Tekstikenttä, joka päivittää username-tilan */}\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={credentials.username}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Salasana:\r\n                    {/* Salasanojen syöttökenttä, joka päivittää password-tilan */}\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={credentials.password}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <br />\r\n                {/* Kirjautumispainike */}\r\n                <button type=\"submit\">Kirjaudu</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CAE3D;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,QAAS,CAAAC,KAAKA,CAAA,CAAG,CACb;AACA,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGT,QAAQ,CAAC,CAAEU,QAAQ,CAAE,EAAE,CAAEC,QAAQ,CAAE,EAAE,CAAC,CAAC,CAC7E,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAAAc,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAE9B;AACA,KAAM,CAAAc,YAAY,CAAIC,CAAC,EAAK,CACxB;AACAP,cAAc,CAAC,CACX,GAAGD,WAAW,CACd,CAACQ,CAAC,CAACC,MAAM,CAACC,IAAI,EAAGF,CAAC,CAACC,MAAM,CAACE,KAC9B,CAAC,CAAC,CACN,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAJ,CAAC,EAAK,CAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC,CAClB,GAAI,CACA;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,iCAAiC,CAAE,CAC5DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACpB,WAAW,CACpC,CAAC,CAAC,CAEF,GAAIc,QAAQ,CAACO,EAAE,CAAE,CACb;AACAf,QAAQ,CAAC,WAAW,CAAC,CAAE;AAC3B,CAAC,IAAM,CACH,KAAM,IAAI,CAAAgB,KAAK,CAAC,wCAAwC,CAAC,CAC7D,CACJ,CAAE,MAAOC,GAAG,CAAE,CACV;AACAlB,QAAQ,CAACkB,GAAG,CAACC,OAAO,CAAC,CACzB,CACJ,CAAC,CACD;AACA,mBACI1B,KAAA,QAAA2B,QAAA,eACI7B,IAAA,OAAA6B,QAAA,CAAI,uBAAe,CAAI,CAAC,CAEvBrB,KAAK,eAAIR,IAAA,MAAG8B,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAF,QAAA,CAAErB,KAAK,CAAI,CAAC,cACjDN,KAAA,SAAM8B,QAAQ,CAAEhB,YAAa,CAAAa,QAAA,eACzB3B,KAAA,UAAA2B,QAAA,EAAO,wBAEH,cACA7B,IAAA,UACIiC,IAAI,CAAC,MAAM,CACXnB,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEX,WAAW,CAACE,QAAS,CAC5B4B,QAAQ,CAAEvB,YAAa,CACvBwB,QAAQ,MACX,CAAC,EACC,CAAC,cACRnC,IAAA,QAAK,CAAC,cACNE,KAAA,UAAA2B,QAAA,EAAO,WAEH,cACA7B,IAAA,UACIiC,IAAI,CAAC,UAAU,CACfnB,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEX,WAAW,CAACG,QAAS,CAC5B2B,QAAQ,CAAEvB,YAAa,CACvBwB,QAAQ,MACX,CAAC,EACC,CAAC,cACRnC,IAAA,QAAK,CAAC,cAENA,IAAA,WAAQiC,IAAI,CAAC,QAAQ,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACrC,CAAC,EACN,CAAC,CAEd,CAEA,cAAe,CAAA1B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}