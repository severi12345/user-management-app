{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\23755\\\\Documents\\\\K-ytt-j-n-muokkaus\\\\frontend\\\\src\\\\components\\\\UserManagement.js\",\n  _s = $RefreshSig$();\n// src/components/UserManagement.js\nimport React, { useState, useEffect } from 'react';\n\n// UserManagement-komponentti hoitaa käyttäjien hallinnan ja CRUD-toiminnot\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserManagement() {\n  _s();\n  // useState hook luo tilan käyttäjille ja uudelle käyttäjälle\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState({\n    username: '',\n    bio: ''\n  });\n  const [editingUser, setEditingUser] = useState(null);\n\n  // useEffect hook suorittaa koodin, kun komponentti ladataan\n  useEffect(() => {\n    // Hakee käyttäjät backendistä\n    fetch('http://localhost:5000/api/users').then(response => response.json()).then(data => setUsers(data));\n  }, []);\n\n  // handleChange-funktio päivittää tilan, kun käyttäjä muuttaa lomakkeen kenttää\n  const handleChange = e => {\n    setNewUser({\n      ...newUser,\n      [e.target.name]: e.target.value\n    });\n  };\n  // handleSubmit-funktio käsittelee lomakkeen lähetyksen\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (editingUser) {\n      // Päivittää käyttäjän backendissä\n      fetch(`http://localhost:5000/api/users/${editingUser.username}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newUser)\n      }).then(response => response.json()).then(updatedUser => {\n        setUsers(users.map(user => user.username === updatedUser.username ? updatedUser : user));\n        setEditingUser(null);\n        setNewUser({\n          username: '',\n          bio: ''\n        });\n      });\n    } else {\n      // Lisää uuden käyttäjän backendissä\n      fetch('http://localhost:5000/api/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newUser)\n      }).then(response => response.json()).then(user => setUsers([...users, user]));\n    }\n  };\n\n  // handleEdit-funktio asettaa käyttäjän muokkaustilaan\n  const handleEdit = user => {\n    setEditingUser(user);\n    setNewUser({\n      username: user.username,\n      bio: user.bio\n    });\n  };\n\n  // handleDelete-funktio poistaa käyttäjän listasta\n  const handleDelete = username => {\n    fetch(`http://localhost:5000/api/users/${username}`, {\n      method: 'DELETE'\n    }).then(() => setUsers(users.filter(user => user.username !== username)));\n  };\n\n  // Komponentin renderöinti\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"K\\xE4ytt\\xE4jien hallinta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"K\\xE4ytt\\xE4j\\xE4nimi:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: newUser.username,\n          onChange: handleChange,\n          disabled: !!editingUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Bio:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"bio\",\n          value: newUser.bio,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingUser ? 'Update User' : 'Lisää Käyttäjä'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"K\\xE4ytt\\xE4j\\xE4luettelo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.username, \": \", user.bio, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(user),\n          children: \"Muokkaa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(user.username),\n          children: \"Poista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, user.username, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(UserManagement, \"GgA96LWLjWk2Z6p/HJRTa6NCvbc=\");\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserManagement","_s","users","setUsers","newUser","setNewUser","username","bio","editingUser","setEditingUser","fetch","then","response","json","data","handleChange","e","target","name","value","handleSubmit","preventDefault","method","headers","body","JSON","stringify","updatedUser","map","user","handleEdit","handleDelete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/23755/Documents/K-ytt-j-n-muokkaus/frontend/src/components/UserManagement.js"],"sourcesContent":["// src/components/UserManagement.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// UserManagement-komponentti hoitaa käyttäjien hallinnan ja CRUD-toiminnot\r\nfunction UserManagement() {\r\n    // useState hook luo tilan käyttäjille ja uudelle käyttäjälle\r\n    const [users, setUsers] = useState([]);\r\n    const [newUser, setNewUser] = useState({ username: '', bio: '' });\r\n    const [editingUser, setEditingUser] = useState(null);\r\n\r\n// useEffect hook suorittaa koodin, kun komponentti ladataan\r\n    useEffect(() => {     \r\n            // Hakee käyttäjät backendistä\r\n        fetch('http://localhost:5000/api/users')\r\n            .then(response => response.json())\r\n            .then(data => setUsers(data));\r\n    \r\n}, []);\r\n\r\n    // handleChange-funktio päivittää tilan, kun käyttäjä muuttaa lomakkeen kenttää\r\n    const handleChange = (e) => {\r\n        setNewUser({\r\n            ...newUser,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    // handleSubmit-funktio käsittelee lomakkeen lähetyksen\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (editingUser) {\r\n            // Päivittää käyttäjän backendissä\r\n            fetch(`http://localhost:5000/api/users/${editingUser.username}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(newUser)\r\n            })\r\n                .then(response => response.json())\r\n                .then(updatedUser => {\r\n                    setUsers(users.map(user => (user.username === updatedUser.username ? updatedUser : user)));\r\n                    setEditingUser(null);\r\n                    setNewUser({ username: '', bio: '' });\r\n                });\r\n        } else {\r\n            // Lisää uuden käyttäjän backendissä\r\n            fetch('http://localhost:5000/api/users', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(newUser)\r\n            })\r\n                .then(response => response.json())\r\n                .then(user => setUsers([...users, user]));\r\n        }\r\n    }\r\n\r\n    // handleEdit-funktio asettaa käyttäjän muokkaustilaan\r\n    const handleEdit = (user) => {\r\n        setEditingUser(user);\r\n        setNewUser({ username: user.username, bio: user.bio });\r\n    };\r\n\r\n    // handleDelete-funktio poistaa käyttäjän listasta\r\n\tconst handleDelete = (username) => {\r\n        fetch(`http://localhost:5000/api/users/${username}`, {\r\n            method: 'DELETE'\r\n        })\r\n            .then(() => setUsers(users.filter(user => user.username !== username)));\r\n    };\r\n\r\n    // Komponentin renderöinti\r\n    return (\r\n        <div>\r\n            <h1>Käyttäjien hallinta</h1>\r\n            {/* Lomakkeen lähetys kutsuu handleSubmit-funktiota */}\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Käyttäjänimi:\r\n                    {/* Tekstikenttä, joka päivittää username-tilan ja estää muokkaamisen päivitystilan aikana */}\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={newUser.username}\r\n                        onChange={handleChange}\r\n                        disabled={!!editingUser}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\nBio:\r\n                    {/* Tekstialue, joka päivittää bio-tilan */}\r\n                    <textarea\r\n                        name=\"bio\"\r\n                        value={newUser.bio}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                {/* Lomakkeen lähetyspainike, joka vaihtaa tekstinsä päivitys- tai lisäystilanteen mukaan */}\r\n                <button type=\"submit\">{editingUser ? 'Update User' : 'Lisää Käyttäjä'}</button>\r\n            </form>\r\n            <h2>Käyttäjäluettelo</h2>\r\n            {/* Käyttäjälistan renderöinti */}\r\n            <ul>\r\n                {users.map(user => (\r\n                    <li key={user.username}>\r\n                        {user.username}: {user.bio}\r\n                        {/* Edit-painike, joka mahdollistaa käyttäjän muokkaamisen */}\r\n                        <button onClick={() => handleEdit(user)}>Muokkaa</button>\r\n                        {/* Delete-painike, joka poistaa käyttäjän */}\r\n                        <button onClick={() => handleDelete(user.username)}>Poista</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}